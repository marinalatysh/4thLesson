

'number' + 3 + 3 
// конкатенація - Спочатку до 'number' додаємо 3, виходить 'number3'. Потім до 'number3' додаємо 3, отримуємо 'number33'.
// 'number33'


null + 3 
// null перетворюється на 0. далі - просто математичний вираз: 0 + 3 = 3
// 3


5 && "qwerty" 
// 5 і "qwerty" - це true, а оператор AND повертає останнє тру значення. тому повертається "qwerty".
// "qwerty"


+'40' + +'2' + "hillel" 
// '40' і '2' перетворюються на числа 40 і 2. математичний вираз - 40 + 2 = 42, потім відбувається конкатенаця - 42 + "hillel" = "42hillel".
// "42hillel"


'10' - 5 === 6 
// '10' стає 10, 10 - 5 = 5, а 5 не дорівнює 6.
// false


true + false 
// true стає 1, false - 0.  1 + 0 = 1
// 1


'4px' - 3 
// '4px' не можна конвертувати у число, тому виходить NaN.
// NaN


'4' - 3 
// '4' стає 4, 4 - 3 = 1
// 1


'6' + 3 ** 0 
// 3 ** 0 = 1. далі конкатенація  - '6' + 1 = '61'
// '61'


12 / '6' 
// '6' стає 6, 12 / 6 = 2.
// 2


'10' + (5 === 6)
// 5 === 6 - це false, і '10' + false = '10false'
 // '10false'


null == '' 
// null і порожній рядок не рівняються одне одному,тому повертається false
// false

3 ** (9 / 3)
// спочатку відбувається операція в дужках.  9 / 3 = 3, 3 ** 3 = 27.
// 27


!!'false' == !!'true' 
// Не пуста стрінга повертає значення true. Обидва значення 'false' і 'true' стають true після !!. true дорівнює true.
// true

0 || '0' && 1 
// 0 - це false, '0' - це true, 1 - це true. спочатку виконується оператор AND - '0' && 1 = 1, 0 || 1 = 1.
// 1


(+null == false) < 1 
// +null стає 0, 0 дорівнює false.  true не менше 1, тому false.
// false


false && true || true 
// false && true = false, false || true = true.
// true


false && (false || true)
// Спочатку опепація в дужках = false || true = true; false && true = false.
 // false



(+null == false) < 1 ** 5 
// +null стає 0, 0 дорівнює false. true не менше 1 , тому false.
// false
